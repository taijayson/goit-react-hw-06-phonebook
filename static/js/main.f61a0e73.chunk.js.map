{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","redux/contacts/contactsActions.js","redux/contacts/contactsOperations.js","redux/contacts/contactsSelectors.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","App.js","redux/contacts/contactsReducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","loadContactsRequest","createAction","loadContactsSuccess","loadContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterContact","axios","defaults","baseURL","contactOperations","uploadContacts","dispatch","get","then","data","catch","err","message","addContact","contact","post","deleteContact","contactId","delete","getAllContacts","state","contacts","getLoading","loading","getFilter","filter","getFilteredContacts","createSelector","normFilter","toLowerCase","name","toLocaleLowerCase","includes","ContactForm","number","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","console","log","props","some","checkContact","onSubmit","alert","this","className","styles","form","label","type","pattern","title","required","input","onChange","button","handleAddContact","Component","connect","target","filter_wrap","filter_title","filter_input","ContactList","getContacts","length","map","id","deletebtn","onClick","onRemoveContact","App","createReducer","payload","contactsReducer","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f61a0e73.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter_wrap\":\"Filter_filter_wrap__1_aep\",\"filter_title\":\"Filter_filter_title__1PVhT\",\"filter_input\":\"Filter_filter_input__2k0eq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\",\"item\":\"ContactList_item__3YsZK\",\"delete_btn\":\"ContactList_delete_btn__1dq-F\"};","// import { db } from \"../../db/request\";\n// import {\n//   UPLOADCONTACTS,\n//   ADDCONTACT,\n//   FILTERCONTACT,\n//   DELETECONTACT,\n// } from \"./contactsConstanse\";\n// import { v4 as uuidv4 } from \"uuid\";\n\n// export const uploadContacts = createAction(UPLOADCONTACTS);\n\n// export const addContact = createAction(ADDCONTACT, ({ name, number }) => ({\n//   payload: {\n//     name,\n//     number,\n//     id: uuidv4(),\n//   },\n// }));\n\n// export const filterContact = createAction(FILTERCONTACT, (event) => ({\n//   payload: event.target.value,\n// }));\n\n// export const deleteContact = createAction(DELETECONTACT);\n\n// const comboDispatchFunc = {\n//   uploadContacts,\n//   addContact,\n//   filterContact,\n//   deleteContact,\n// };\n// export default comboDispatchFunc;\n\nimport { createAction } from \"@reduxjs/toolkit\";\n\nconst loadContactsRequest = createAction(\"contacts/loadContactsRequest\");\nconst loadContactsSuccess = createAction(\"contacts/loadContactsSuccess\");\nconst loadContactsError = createAction(\"contacts/loadContactsError\");\n\nconst addContactRequest = createAction(\"contacts/addContactRequest\");\nconst addContactSuccess = createAction(\"contacts/addContactSuccess\");\nconst addContactError = createAction(\"contacts/addContactError\");\n\nconst deleteContactRequest = createAction(\"contacts/deleteContactRequest\");\nconst deleteContactSuccess = createAction(\"contacts/deleteContactSuccess\");\nconst deleteContactError = createAction(\"contacts/deleteContactError\");\n\nconst filterContact = createAction(\"contact/filter\");\n\nexport {\n  loadContactsRequest,\n  loadContactsSuccess,\n  loadContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  filterContact,\n};\n","import axios from \"axios\";\n\nimport {\n  loadContactsRequest,\n  loadContactsSuccess,\n  loadContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from \"./contactsActions\";\n\naxios.defaults.baseURL = \"http://localhost:4040\";\n\nconst uploadContacts = () => (dispatch) => {\n  dispatch(loadContactsRequest());\n  return axios\n    .get(\"/contacts\")\n    .then(({ data }) => dispatch(loadContactsSuccess(data)))\n    .catch((err) => dispatch(loadContactsError(err.message)));\n};\n\nconst addContact = (contact) => (dispatch) => {\n  dispatch(addContactRequest());\n  return axios\n    .post(\"/contacts\", contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch((err) => dispatch(addContactError(err.message)));\n};\n\nconst deleteContact = (contactId) => (dispatch) => {\n  dispatch(deleteContactRequest());\n  return axios\n    .delete(`/contacts/${contactId}`)\n    .then(() => dispatch(deleteContactSuccess(contactId)))\n    .catch((err) => dispatch(deleteContactError(err.message)));\n};\n\nconst contactOperations = { uploadContacts, addContact, deleteContact };\n\nexport default contactOperations;\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nconst getAllContacts = (state) => state.contacts;\n\nconst getLoading = (state) => state.loading;\n\nconst getFilter = (state) => state.filter;\n\nconst getFilteredContacts = createSelector(\n  [getFilter, getAllContacts],\n  (filter, contacts) => {\n    const normFilter = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLocaleLowerCase().includes(normFilter)\n    );\n  }\n);\n\nexport { getAllContacts, getLoading, getFilter, getFilteredContacts };\n","import { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactForm.module.css\";\nimport contactOperations from \"../../redux/contacts/contactsOperations\";\nimport { getAllContacts } from \"../../redux/contacts/contactsSelectors\";\n// import { v4 as uuidv4 } from \"uuid\";\n// import contactActions from \"../../redux/contacts/contactsActions\";\n// import comboDispatchFunc from \"../../redux/contacts/contactsActions\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  // componentDidMount() {\n  //   try {\n  //     const contacts = JSON.parse(localStorage.getItem(\"contacts\"));\n  //     if (contacts) {\n  //       this.props.dbUploadContacts(contacts);\n  //     }\n  //   } catch (error) {}\n  // }\n\n  // componentDidUpdate(prevProps, prevState) {\n  //   if (this.props.contacts !== prevProps.contacts) {\n  //     localStorage.setItem(\"contacts\", JSON.stringify(this.props.contacts));\n  //   }\n  //   console.log(prevProps);\n  // }\n\n  handleChange = (event) => {\n    const { name, value } = event.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const { name, number } = this.state;\n    console.log(this.state);\n\n    const checkContact = (name) => {\n      const { contacts } = this.props;\n      return contacts.some(\n        (contact) => contact.name.toLowerCase() === name.toLowerCase()\n      );\n    };\n\n    if (checkContact(name)) {\n      alert(`Contact with name \"${name}\" already in base`);\n      return;\n    }\n\n    // const newContact = {\n    //   name: name,\n    //   number: number,\n    //   id: uuidv4(),\n    // };\n\n    this.props.onSubmit({ name, number });\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} className={styles.form}>\n        <label className={styles.label}>Name</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          className={styles.input}\n          value={this.state.name}\n          onChange={this.handleChange}\n        />\n        <label className={styles.label}>Number</label>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n          title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n          required\n          className={styles.input}\n          value={this.state.number}\n          onChange={this.handleChange}\n        />\n        <button\n          className={styles.button}\n          type=\"submit\"\n          onSubmit={this.handleAddContact}\n        >\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  console.log(state);\n  return {\n    contacts: getAllContacts(state),\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  // dbUploadContacts: (contacts) =>\n  //   dispatch(comboDispatchFunc.uploadContacts(contacts)),\n  onSubmit: (contact) => dispatch(contactOperations.addContact(contact)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Filter.module.css\";\nimport { filterContact } from \"../../redux/contacts/contactsActions\";\nimport { getFilter } from \"../../redux/contacts/contactsSelectors\";\n// import comboDispatchFunc from \"../../redux/contacts/contactsActions\";\n\nconst Filter = ({ filter, filterContact }) => {\n  // console.log(filter);\n  // console.log(filterContact);\n  return (\n    <div className={styles.filter_wrap}>\n      <p className={styles.filter_title}>Find contacts by name</p>\n      <input\n        className={styles.filter_input}\n        type=\"text\"\n        value={filter}\n        onChange={filterContact}\n      />\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  filterContact: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = ({ filter }) => {\n  return (\n    console.log(filter),\n    {\n      filter: getFilter(filter),\n    }\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  filterContact: (event) => dispatch(filterContact(event.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport styles from \"./ContactList.module.css\";\nimport contactOperations from \"../../redux/contacts/contactsOperations\";\nimport {\n  getLoading,\n  getFilteredContacts,\n} from \"../../redux/contacts/contactsSelectors\";\n\nclass ContactList extends Component {\n  state = {};\n\n  componentDidMount() {\n    this.props.getContacts();\n  }\n\n  render() {\n    return (\n      <>\n        {this.props.loading && <h1>...</h1>}\n        <ul>\n          {this.props.contacts.length > 0 &&\n            this.props.contacts.map(({ id, name, number }) => (\n              <li key={id}>\n                {name}: {number}\n                <button\n                  className={styles.deletebtn}\n                  onClick={() => this.props.onRemoveContact(id)}\n                >\n                  del\n                </button>\n              </li>\n            ))}\n        </ul>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  contacts: getFilteredContacts(state),\n  loading: getLoading(state),\n  //   contacts.filter((contact) =>\n  // contact.name.toLowerCase().includes(filter.toLowerCase())\n  // ),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onRemoveContact: (contactId) =>\n    dispatch(contactOperations.deleteContact(contactId)),\n  getContacts: () => dispatch(contactOperations.uploadContacts()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n\nContactList.propTypes = {\n  onRemoveContact: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n// import contactActions from \"../../redux/contacts/contactsActions\";\n\n// const ContactList = ({ contacts, onRemoveContact, uploadContacts }) => {\n//   console.log(contacts);\n\n//   return (\n//     <ul className={styles.list}>\n//       {contacts.map(({ name, id, number }) => {\n//         return (\n//           <li className={styles.item} key={id}>\n//             {name + \" : \" + number}\n//             <button\n//               className={styles.delete_btn}\n//               onClick={() => onRemoveContact(id)}\n//             >\n//               Delete\n//             </button>\n//           </li>\n//         );\n//       })}\n//     </ul>\n//   );\n// };\n","import React from \"react\";\n\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport Filter from \"./components/Filter/Filter\";\nimport ContactList from \"./components/ContactList/ContactList\";\n\n// import { v4 as uuidv4 } from \"uuid\";\n\nimport \"./App.css\";\n\nexport const App = () => {\n  return (\n    <div className=\"wrap\">\n      <div className=\"section\">\n        <h1 className=\"title\">Phonebook</h1>\n        <ContactForm />\n      </div>\n      <div className=\"section\">\n        <h2 className=\"title\">Contacts</h2>\n        <Filter />\n        <ContactList />\n      </div>\n    </div>\n  );\n};\n// }\n\nexport default App;\n","import { combineReducers } from \"redux\";\n\nimport { createReducer } from \"@reduxjs/toolkit\";\n\nimport {\n  loadContactsRequest,\n  loadContactsSuccess,\n  loadContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  filterContact,\n} from \"./contactsActions\";\n\nconst contacts = createReducer([], {\n  [loadContactsSuccess]: (state, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst loading = createReducer(false, {\n  [loadContactsSuccess]: () => false,\n  [loadContactsRequest]: () => true,\n  [loadContactsError]: () => false,\n  [addContactSuccess]: () => false,\n  [addContactRequest]: () => true,\n  [addContactError]: () => false,\n  [deleteContactSuccess]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactError]: () => false,\n});\n\nconst filter = createReducer(\"\", {\n  [filterContact]: (state, { payload }) => payload,\n});\n\nconst contactsReducer = combineReducers({\n  contacts,\n  loading,\n  filter,\n});\n\nexport default contactsReducer;\n\n// import {\n//   addContact,\n//   deleteContact,\n//   uploadContacts,\n//   filterContact,\n// } from \"./contactsActions\";\n// const contacts = localStorage.getItem(\"contacts\");\n// const contactsItem = createReducer([], {\n//   [addContact]: (state, { payload }) => {\n//     console.log(payload);\n//     return [...state, payload];\n//   },\n//   [uploadContacts]: (state, { payload }) => payload,\n//   [deleteContact]: (state, { payload }) =>\n//     state.filter((contact) => contact.id !== payload),\n// });\n\n// const contactsFilter = createReducer(\"\", {\n//   [filterContact]: (state, { payload }) => payload,\n// });\n\n// const contactsReducer = combineReducers({\n//   contacts: contactsItem,\n//   filter: contactsFilter,\n// });\n\n// export { contactsReducer };\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport contactsReducer from \"./contacts/contactsReducer\";\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst store = configureStore({\n  reducer: contactsReducer,\n  middleware,\n});\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\nimport \"./styles/main.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"label\":\"ContactForm_label__378f8\",\"input\":\"ContactForm_input__gm87B\",\"button\":\"ContactForm_button__1MLZK\",\"buttonfocus\":\"ContactForm_buttonfocus__IYanX\"};"],"sourceRoot":""}